{"version":3,"sources":["Dashboard/Header.js","DateTime/Setdeadline.js","UI/Button.js","UI/InputField.js","Axios.js","Context/ParentTask-context.js","Sorting/Sort.js","Context/TodoList-context.js","EditTodo/EditTodo.js","EditTodo/EditModal.js","Todolist/TodoListItem.js","DateTime/formatDate.js","Todolist/TodoList.js","AddTodo/AddTodo.js","mediaQueries/size.js","mediaQueries/device.js","UI/Select.js","Dashboard/TodoDashBoard.js","HomePage/AddTaskDialog.js","HomePage/AddParentTaskModal.js","HomePage/AddParentTask.js","EditParentTask/EditParentTaskModal.js","UI/Modal.js","EditParentTask/CompleteTaskModal.js","EditParentTask/UncheckTaskModal.js","EditParentTask/ActionParentTaskModal.js","HomePage/ParentTaskListItem.js","HomePage/ParentTaskList.js","HomePage/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["HeaderStyle","styled","Paper","backgroundColor","color","fontFamily","fontWeight","width","padding","display","justifyContent","fontSize","Header","props","Grid","container","spacing","item","xs","elevation","SetDeadline","utils","DateFnsUtils","DateTimePicker","clearable","placeholder","disabled","input","disablePast","value","selectedDate","onChange","handleDateChange","invalidDateMessage","invalidLabel","maxDateMessage","minDateMessage","CustomButton","Button","variant","type","onClick","e","clicked","text","InputField","Input","autoFocus","setInput","target","instance","axios","create","baseURL","ParentTaskContext","React","createContext","parentTasks","setTask","addTask","parentTask","deleteTask","id","editTask","taskname","ParentTaskId","updateCompleted","getParentTaskId","uncheckTask","useState","parentTaskList","setparentTaskList","TaskId","setTaskId","setParentTask","get","then","response","data","catch","error","console","log","Provider","post","taskName","prevTasks","delete","res","err","patch","alert","message","children","sortingRecentAdded","todos","Object","assign","sort","a","b","createdAt","TodoListContext","todoLists","getTodos","parentTaskId","addTodos","todoName","deadline","editTodo","deleteTodo","iscompleted","getSort","order","getSortedTodos","sortOrder","Todos","setTodos","useContext","resetOrder","fetchTodoList","parentId","sortedData","sortingData","cloneTodos","completedTodos","filter","todo","completed","incompleteTodos","doubleSortCompleted","doubleSortIncompleted","sortingTaskCompleted","pendingTodos","completeTodos","doubleSortpending","doubleSortcompleted","sortingPendingTask","forEach","element","Date","getTime","sortingDeadlineTask","EditTodo","editTodoItem","sm","preventDefault","setDialog","EditModal","open","Dialog","onClose","DialogContent","dividers","ListTextStyle","ListItemText","textDecoration","TodoListItem","date","listText","strikeText","deleteTodoItem","setCompleted","setCompletedItem","pending","moment","format","deadlineText","missedDeadlineText","role","key","style","List","ListItem","button","primary","secondary","Divider","TodoList","useEffect","map","elm","_id","GridStyle","marginTop","margin","AddTodo","addNewTodo","justify","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SelectCustom","sortName","setsortName","getSortOrder","FormControl","fullWidth","InputLabel","Select","event","MenuItem","styles","todospage","height","overflowY","cardStyle","textAlign","overflow","paperStyle","styledLink","TodosPage","CardStyle","PaperStyle","StyledLink","NavLink","TodoDashBoard","Fab","to","AddTaskDialog","AddParentTaskModal","close","fabButton","zIndex","top","appBar","FabButton","AppBarStyle","AddParentTask","setOpen","Toolbar","EditParentTaskModal","editParentTask","Modal","flexDirection","Content","ButtonStyled","CompleteTaskModal","updateTaskCompleted","UncheckTaskModal","ActionParentTaskModal","deleteParentTask","anchorEl","setAnchorEl","Editmodal","setEditmodal","Completedmodal","setCompletedmodal","Uncheckmodal","setUncheckmodal","Boolean","options","handleClose","textContent","IconButton","currentTarget","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","option","selected","dense","objectFit","ListLinkStyle","Link","ParentTaskListItem","updatedAt","getId","fetchId","ParentTaskList","isloading","setIsloading","Fragment","home","paper","paddingBottom","Homepage","HomePage","square","AppDivStyle","position","routes","path","component","exact","App","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e99cdc41.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Paper} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst styles = {\r\n    headerStyle: {\r\n      backgroundColor:'#00134d !important',\r\n      color: 'white !important',\r\n      fontFamily : 'Aharoni !important',\r\n      fontWeight: 'bold !important',\r\n      width: '100% !important',\r\n      padding:'30px !important',\r\n      display: 'flex !important',\r\n      justifyContent: 'center !important',\r\n      fontSize:'30px !important'\r\n      \r\n    }\r\n}\r\nconst HeaderStyle = styled(Paper)(styles.headerStyle);\r\n\r\nconst Header = (props) => {\r\n    return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} >\r\n                    <HeaderStyle elevation={10}>Todo List</HeaderStyle>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n     )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers'\r\n\r\nconst SetDeadline = (props) => {\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DateTimePicker\r\n                clearable={props.clearable}\r\n                placeholder={props.placeholder}\r\n                disabled={!props.input}\r\n                disablePast\r\n                value={props.selectedDate}\r\n                onChange={props.handleDateChange}\r\n                invalidDateMessage = ''\r\n                invalidLabel= ''\r\n                maxDateMessage= ''\r\n                minDateMessage='' />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default SetDeadline;\r\n\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst CustomButton = (props) => {\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={(e) => props.clicked(e)}\r\n            disabled={props.disabled} >\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\n\r\nconst InputField = (props) => {\r\n   \r\n    return (\r\n        <Input\r\n            autoFocus\r\n            placeholder= {props.placeholder}\r\n            value={props.input}\r\n            onChange={(e) => props.setInput(e.target.value)} />\r\n    )\r\n}\r\n\r\nexport default InputField;\r\n","import axios from 'axios';\r\n\r\nconst devURl ='http://localhost:3001/';\r\nconst prodURL = '/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === \"development\" ? devURl : prodURL\r\n});\r\n\r\nexport default instance;","import React, { useState } from 'react';\r\nimport axios from '../Axios';\r\nexport const ParentTaskContext = React.createContext({\r\n    parentTasks: [],\r\n    setTask: () => { },\r\n    addTask: (parentTask) => { },\r\n    deleteTask: (id) => { },\r\n    editTask: (id, taskname) => { },\r\n    ParentTaskId: '',\r\n    updateCompleted: (id) => { },\r\n    getParentTaskId: (id) => { },\r\n    uncheckTask: (id) => { }\r\n\r\n})\r\nexport default props => {\r\n    const [parentTaskList, setparentTaskList] = useState([]);\r\n    const [TaskId, setTaskId] = useState([]);\r\n\r\n\r\n    const addParentTaskItem = (parentTask) => {\r\n        axios.post('/task', {\r\n            taskName: parentTask\r\n        })\r\n            .then(response => {\r\n                setParentTask(prevTasks =>\r\n                    [\r\n                        ...prevTasks,\r\n                        response.data\r\n                    ]\r\n                );\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    const setParentTask = () => {\r\n        axios.get('/task')\r\n            .then(response => {\r\n                setparentTaskList(response.data);\r\n            })\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    const deleteTaskItem = (id) => {\r\n\r\n        axios\r\n            .delete(`/task/${id}`)\r\n            .then(res => { setParentTask() })\r\n            .catch(err => { console.log(err) });\r\n    }\r\n\r\n    const editParentTask = (id, taskname) => {\r\n        axios\r\n            .patch(`/task/${id}`, {\r\n                taskName: taskname\r\n            })\r\n            .then(res => { setParentTask() })\r\n            .catch(err => { console.log(err) });\r\n    }\r\n\r\n    const gettaskId = (id) => {\r\n        setTaskId(id)\r\n    }\r\n\r\n    const setCompleted = (id) => {\r\n        axios\r\n            .patch(`/task/completed/${id}`)\r\n            .then(res => { setParentTask(); })\r\n            .catch(err => { alert(err.message) });\r\n    }\r\n\r\n    const uncheckParentTask = (id) => {\r\n        axios\r\n            .patch(`/task/uncheck/${id}`)\r\n            .then(res => { setParentTask(); })\r\n            .catch(err => { alert(err.message) });\r\n    }\r\n\r\n    return (\r\n        <ParentTaskContext.Provider\r\n            value={{\r\n                parentTasks: parentTaskList,\r\n                setTask: setParentTask,\r\n                addTask: addParentTaskItem,\r\n                deleteTask: deleteTaskItem,\r\n                editTask: editParentTask,\r\n                ParentTaskId: TaskId,\r\n                getParentTaskId: gettaskId,\r\n                updateCompleted: setCompleted,\r\n                uncheckTask: uncheckParentTask\r\n            }}>\r\n            {props.children}\r\n        </ParentTaskContext.Provider>\r\n    )\r\n\r\n}","export const sortingRecentAdded = (todos) => {\r\n    const cloneTodos = Object.assign([], todos);\r\n    const sortedTodos = cloneTodos.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1);\r\n    return sortedTodos;\r\n}\r\n\r\nexport const sortingTaskCompleted = (todos) => {\r\n    const cloneTodos = Object.assign([], todos);\r\n    const completedTodos = cloneTodos.filter(todo => todo.completed === true)\r\n    const incompleteTodos = cloneTodos.filter(todo => todo.completed === false)\r\n    const doubleSortCompleted = sortingRecentAdded(completedTodos);\r\n    const doubleSortIncompleted = sortingRecentAdded(incompleteTodos);\r\n    const sortedTodos = [\r\n        ...doubleSortCompleted,\r\n        ...doubleSortIncompleted\r\n    ]\r\n    return sortedTodos;\r\n}\r\n\r\nexport const sortingPendingTask = (todos) => {\r\n    const cloneTodos = Object.assign([], todos);\r\n    const pendingTodos  = cloneTodos.filter(todo => todo.completed === false)\r\n    const completeTodos = cloneTodos.filter(todo => todo.completed === true)\r\n    const doubleSortpending = sortingRecentAdded(pendingTodos);\r\n    const doubleSortcompleted = sortingRecentAdded(completeTodos);\r\n    const sortedTodos = [\r\n        ...doubleSortpending,\r\n        ...doubleSortcompleted\r\n    ]\r\n    return sortedTodos;\r\n}\r\n\r\nexport const sortingDeadlineTask = (todos) => {\r\n    const cloneTodos = Object.assign([], todos);\r\n    cloneTodos.forEach(element => {\r\n        element.deadline = new Date(element.deadline).getTime();\r\n    });\r\n    const sortedTodos = cloneTodos.sort((a, b) => new Date(a.deadline).getTime() > new Date(b.deadline).getTime() ? 1 : -1);\r\n    return sortedTodos;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from '../Axios';\r\nimport { ParentTaskContext } from './ParentTask-context';\r\nimport { sortingRecentAdded, sortingTaskCompleted, sortingPendingTask, sortingDeadlineTask } from '../Sorting/Sort';\r\nexport const TodoListContext = React.createContext({\r\n\ttodoLists: [],\r\n\tgetTodos: (parentTaskId) => { },\r\n\taddTodos: (parentTaskId, todoName, deadline) => { },\r\n\teditTodo: (id, todoName, deadline) => { },\r\n\tdeleteTodo: (id) => { },\r\n\tupdateCompleted: (id, iscompleted) => { },\r\n\tgetSort: (order) => { },\r\n\tgetSortedTodos: (id) => { },\r\n\tsortOrder:''\r\n})\r\n\r\nexport default props => {\r\n\tconst [Todos, setTodos] = useState([]);\r\n\tconst setParentTask = useContext(ParentTaskContext).setTask; //has the parent task id that was clicked\r\n\tconst [order, resetOrder] = useState('');\r\n\t\r\n\t//to list all the todos of a specific parent Task\r\n\tconst fetchTodoList = (parentId) => {\r\n\t\taxios.get(`/todos/${parentId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst sortedData = Object.assign([], sortingData(response.data));\r\n\t\t\t\tsetTodos(sortedData);\r\n\t\t\t\tresetOrder('Recent Added')\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(error))\r\n\t}\r\n\t//Add a new Todo\r\n\tconst addNewTodo = (parentId, todoName, deadline) => {\r\n\t\taxios.post(`/todos/${parentId}`, {\r\n\t\t\ttodo: todoName,\r\n\t\t\tdeadline: deadline\r\n\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tfetchTodoList(response.data.parentTask);\r\n\t\t\t\tsetParentTask();\r\n\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(error))\r\n\t}\r\n\t//Edit Todo\r\n\tconst editTodoItem = (id, todoName, deadline) => {\r\n\t\taxios\r\n\t\t\t.patch(`/todos/${id}`, {\r\n\t\t\t\ttodo: todoName,\r\n\t\t\t\tdeadline: deadline\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tfetchTodoList(res.data.parentTask); setParentTask();\r\n\t\t\t})\r\n\t\t\t.catch(err => { console.log(err) });\r\n\t}\r\n\t//Delete the todo\r\n\tconst removeTodo = (id) => {\r\n\t\taxios\r\n\t\t\t.delete(`/todos/${id}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\tfetchTodoList(res.data.parentTask); setParentTask();\r\n\t\t\t})\r\n\t\t\t.catch(err => { console.log(err) });\r\n\t}\r\n\t//update the completed todo\r\n\tconst setCompleted = (id, iscompleted) => {\r\n\t\taxios\r\n\t\t\t.patch(`/todos/completed/${id}`, { completed: iscompleted })\r\n\t\t\t.then(res => {\r\n\t\t\t\tfetchTodoList(res.data.parentTask); setParentTask();\r\n\t\t\t})\r\n\t\t\t.catch(err => { alert(err.message) });\r\n\t}\r\n\t//sorting todos\r\n\tconst getSortOrder = (order) => {\r\n\t\tconst sortedData = Object.assign([], sortingData(Todos, order));\r\n\t\tsetTodos(sortedData);\r\n\t}\r\n\t//Selecting Sort Type\r\n\tconst sortingData = (data, order) => {\r\n\t\tif(order) {\r\n\t\t\tresetOrder(order);\r\n\t\t}\r\n\t\tswitch (order) {\r\n\t\t\tcase 'Recent Added': return sortingRecentAdded(data);\r\n\t\t\tcase 'Task Completed': return sortingTaskCompleted(data);\r\n\t\t\tcase 'Pending task': return sortingPendingTask(data);\r\n\t\t\tcase 'Upcoming Deadline': return sortingDeadlineTask(data);\r\n\t\t\tdefault: return sortingRecentAdded(data);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<TodoListContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tgetTodos: fetchTodoList,\r\n\t\t\t\ttodoLists: Todos,\r\n\t\t\t\taddTodos: addNewTodo,\r\n\t\t\t\teditTodo: editTodoItem,\r\n\t\t\t\tdeleteTodo: removeTodo,\r\n\t\t\t\tupdateCompleted: setCompleted,\r\n\t\t\t\tgetSort: getSortOrder,\r\n\t\t\t\tsortOrder: order\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</TodoListContext.Provider>\r\n\t)\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport SetDeadline from '../DateTime/Setdeadline';\r\nimport Button from '../UI/Button';\r\nimport InputField from '../UI/InputField';\r\nimport { TodoListContext } from '../Context/TodoList-context';\r\n\r\n//Update the chnges in a todo and save it in db\r\n//props passed from <EditModal />\r\nconst EditTodo = (props) => {\r\n    const editTodoItem = useContext(TodoListContext).editTodo; //contains all the todoslist\r\n    const [input, setInput] = useState(props.data); //update the Todo name\r\n    const [selectedDate, handleDateChange] = useState(props.deadline); //update the deadline\r\n\r\n    //update the changes in db\r\n    const onUpdateHandler = (e) => {\r\n        e.preventDefault();\r\n        editTodoItem(props.id, input, selectedDate);\r\n        props.setDialog(false);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12} sm={4} >\r\n                    <InputField setInput={setInput} input={input} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <SetDeadline\r\n                        input={input}\r\n                        placeholder={props.deadline}\r\n                        selectedDate={selectedDate}\r\n                        handleDateChange={handleDateChange} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <Button\r\n                        clicked={onUpdateHandler}\r\n                        disabled={!input}\r\n                        text=\"Update\" />\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default EditTodo;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditTodo from './EditTodo';\r\n\r\n//open and close the <EditModal />\r\n//update the changes for a Todo\r\n//props passed from <TodoListItem />\r\n//props passed to <EditTodo />\r\nconst EditModal = (props) => {\r\n    const [open, setDialog] = useState(false);\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={e => setDialog(false)}>\r\n                <DialogContent dividers>\r\n                    <EditTodo\r\n                        id={props.id}\r\n                        data={props.data}\r\n                        deadline={props.deadline}\r\n                        setDialog={()=>setDialog(false)} />\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <EditOutlinedIcon\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setDialog(true)} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditModal;","import React, { useState, useContext } from 'react';\r\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport EditModal from '../EditTodo/EditModal';\r\nimport styled from 'styled-components';\r\nimport { TodoListContext } from '../Context/TodoList-context';\r\nimport { formatDate } from '../DateTime/formatDate';\r\nimport moment from 'moment';\r\n\r\nconst styles = {\r\n\tlistTextStyle: {\r\n\t\tcolor: 'red !important',\r\n\t\ttextDecoration: 'line-through !important'\r\n\t}\r\n}\r\nconst ListTextStyle = styled(ListItemText)(styles.listTextStyle);\r\n\r\n//display of Each Todo row\r\n//props passed from <TodoList />\r\n// props passed to <EditModal />\r\nconst TodoListItem = (props) => {\r\n\r\n\tconst [listText, strikeText] = useState(props.completed);\r\n\tconst deleteTodoItem = useContext(TodoListContext).deleteTodo;\r\n\tconst setCompleted = useContext(TodoListContext).updateCompleted;\r\n\r\n\tconst setCompletedItem = () => {\r\n\t\tstrikeText(!listText);\r\n\t\tsetCompleted(props.id, !listText);\r\n\r\n\t}\r\n\r\n\tconst deleteItem = () => {\r\n\t\tdeleteTodoItem(props.id)\r\n\t}\r\n\tconst pending = moment(props.deadline) < moment(); \r\n\tconst deadline = formatDate(props.deadline);\r\n\tconst deadlineText = `Deadline⏲ : ${deadline}`\r\n\tconst missedDeadline = <span role=\"img\" key={deadline} style={{ color: 'red' }}>  ❗❗❗ Missed Deadline⏲</span>\r\n\tconst missedDeadlineText = [deadlineText, missedDeadline];\r\n\t\r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t\t<List >\r\n\t\t\t\t<ListItem button >\r\n\t\t\t\t\t{listText ?\r\n\t\t\t\t\t\t<ListTextStyle\r\n\t\t\t\t\t\t\tonClick={setCompletedItem}\r\n\t\t\t\t\t\t\tprimary={props.data}\r\n\t\t\t\t\t\t\tsecondary={\"Deadline⏲ : \" + deadline}\r\n\t\t\t\t\t\t/> :\r\n\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\tstyle={{ color: 'blue' }}\r\n\t\t\t\t\t\t\tonClick={setCompletedItem}\r\n\t\t\t\t\t\t\tprimary={props.data}\r\n\t\t\t\t\t\t\tsecondary={pending ? missedDeadlineText : deadlineText}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{listText ?\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<EditModal data={props.data} deadline={props.deadline} id={props.id} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<DeleteForeverOutlinedIcon\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={deleteItem}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Divider />\r\n\t\t\t</List>\r\n\t\t</div>\r\n\r\n\r\n\t)\r\n}\r\n\r\nexport default TodoListItem;\r\n","import moment from 'moment';\r\nexport const formatDate = (date) => {\r\n    return moment(date).format(\"dddd, MMMM Do, h:mm:ss a\")\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport { TodoListContext } from '../Context/TodoList-context';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\n\r\n//display the list of todos\r\n//props passed from <TodoDashboard />\r\n//props passed to <TodoListItem />\r\nconst TodoList = (props) => {\r\n    const todos = Object.assign([], useContext(TodoListContext).todoLists); //contains all the todoslist\r\n    const setTodos = useContext(TodoListContext).getTodos; //setTodos state in context-api\r\n    const parentTaskId = useContext(ParentTaskContext).ParentTaskId; //has the parent task id that was clicked\r\n    \r\n    //list of Todos are fetched from db\r\n    useEffect(() => {\r\n        setTodos(parentTaskId);\r\n       \r\n    }, [])\r\n    \r\n    return (\r\n        todos.map(elm => {\r\n            return <TodoListItem\r\n                data={elm.todo}\r\n                key={elm._id}\r\n                id={elm._id}\r\n                parentTaskId={props.parentTaskId}\r\n                deadline={elm.deadline}\r\n                completed={elm.completed}\r\n                pending={elm.pending} />\r\n        })\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { Grid} from '@material-ui/core';\r\nimport InputField from '../UI/InputField';\r\nimport SetDeadline from '../DateTime/Setdeadline';\r\nimport Button from '../UI/Button';\r\nimport styled from 'styled-components';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\nimport { TodoListContext } from '../Context/TodoList-context';\r\n\r\nconst styles = {\r\n    gridStyle: {\r\n        backgroundColor: \"#c0c8ff4f\",\r\n        width: '50%',\r\n        marginTop: '5%',\r\n        margin: 'auto'\r\n    },\r\n\r\n}\r\nconst GridStyle = styled(Grid)(styles.gridStyle);\r\n\r\nconst AddTodo = (props) => {\r\n\r\n    const parentTaskId = useContext(ParentTaskContext).ParentTaskId; //has the parent task id that was clicked\r\n    const addNewTodo = useContext(TodoListContext).addTodos; //setTodos state in context-api\r\n    const [input, setInput] = useState('');\r\n    const [selectedDate, handleDateChange] = useState(null);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        addNewTodo(parentTaskId, input, selectedDate)\r\n        setInput('');\r\n        handleDateChange(null);\r\n    }\r\n\r\n    return (\r\n        <form >\r\n            <GridStyle container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} sm={2} >\r\n                    <InputField placeholder=\"Add New Todo\" setInput={setInput} input={input} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} >\r\n                    <SetDeadline clearable input={input} placeholder=\"Set the Deadline\" selectedDate={selectedDate} handleDateChange={handleDateChange} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} >\r\n                    <Button\r\n                        clicked={onSubmitHandler}\r\n                        disabled={(!input || !selectedDate) ? true : false}\r\n                        text=\"Add\" />\r\n                </Grid>\r\n            </GridStyle>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;\r\n\r\n\r\n","export const size = { \r\n    mobileS: '320px', \r\n    mobileM: '375px', \r\n    mobileL: '425px', \r\n    tablet: '768px', \r\n    laptop: '1024px',\r\n    laptopL: '1440px', \r\n    desktop: '2560px' \r\n}","import { size } from \"./size\"; \r\nexport const device = { \r\n    mobileS: `@media (min-width: ${size.mobileS})`, \r\n    mobileM: `@media (min-width: ${size.mobileM})`, \r\n    mobileL: `@media (min-width: ${size.mobileL})`, \r\n    tablet: `@media (min-width: ${size.tablet})`, \r\n    laptop: `@media (min-width: ${size.laptop})`, \r\n    laptopL: `@media (min-width: ${size.laptopL})`, \r\n    desktop: `@media (min-width: ${size.desktop})`, \r\n    desktopL: `@media (min-width: ${size.desktop})`\r\n};","import React, { useState, useContext } from 'react';\r\nimport { Select, FormControl, InputLabel, Input, MenuItem } from '@material-ui/core';\r\nimport {TodoListContext} from '../Context/TodoList-context';\r\n\r\n\r\nconst SelectCustom = (props) => {\r\n    const sortList = ['Recent Added', 'Upcoming Deadline', 'Task Completed', 'Pending task'];\r\n    const [sortName, setsortName] = useState('Recent Added');\r\n    const getSortOrder = useContext(TodoListContext).getSort; //contains all the todoslist\r\n    const sortOrder = useContext(TodoListContext).sortOrder;\r\n    \r\n\r\n    const handleChange = (event) => {\r\n            setsortName(event.target.value);\r\n            getSortOrder(event.target.value);\r\n              \r\n    };\r\n    return (\r\n        <FormControl fullWidth>\r\n            <InputLabel >Sort</InputLabel>\r\n                <Select\r\n                    value={sortOrder!==sortName ? sortOrder : sortName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                >\r\n                {sortList.map((sort) => (\r\n                    <MenuItem key={sort} value={sort}>\r\n                        {sort}\r\n                    </MenuItem>\r\n                ))}\r\n                </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SelectCustom;","import React from 'react';\r\nimport { Grid, Paper, Fab } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport styled from 'styled-components';\r\nimport TodoList from '../Todolist/TodoList';\r\nimport AddTodo from '../AddTodo/AddTodo';\r\nimport { device } from '../mediaQueries/device';\r\nimport SelectCustom from '../UI/Select';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst styles = {\r\n    todospage: {\r\n        [device.mobileS]: {\r\n            height: '90%',\r\n            overflowY: \"auto\",\r\n        },\r\n\r\n    },\r\n    cardStyle: {\r\n        width: '96%',\r\n        margin: 'auto',\r\n        padding: '10px',\r\n        marginTop: '10px',\r\n        height: '370px',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'scroll',\r\n        [device.mobileL]: {\r\n            width: \"85%\",\r\n        }\r\n    },\r\n    paperStyle: {\r\n        margin: 'auto',\r\n        padding: '20px 5px 10px 20px',\r\n        textAlign: 'center',\r\n        marginTop: '5px',\r\n        justifyContent: 'center',\r\n        [device.mobileL]: {\r\n            width: \"85%\",\r\n        },\r\n\r\n    },\r\n    styledLink: {\r\n        color: 'white'\r\n    }\r\n}\r\n\r\nconst TodosPage = styled('div')(styles.todospage);\r\n\r\nconst CardStyle = styled(Paper)(styles.cardStyle);\r\nconst PaperStyle = styled(Paper)(styles.paperStyle);\r\nconst StyledLink = styled(NavLink)(styles.styledLink);\r\n\r\n//below component is to fetch list of todos from the db and display it, todos are pssed on to <TodoList /> component\r\nconst TodoDashBoard = (props) => {\r\n\r\n\r\n    return (\r\n        <TodosPage>\r\n            <PaperStyle elevation={5}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={8}>\r\n                        <AddTodo />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <SelectCustom />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2} >\r\n                        <Fab color=\"primary\" size=\"small\">\r\n                            <StyledLink to=\"/\"><HomeIcon /></StyledLink>\r\n                        </Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperStyle>\r\n            <CardStyle elevation={5}>\r\n                <Grid item xs={12} >\r\n                    <TodoList />\r\n                </Grid>\r\n            </CardStyle>\r\n        </TodosPage>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoDashBoard;\r\n","import React, {useState, useContext} from 'react'\r\nimport InputField from '../UI/InputField';\r\nimport Button from '../UI/Button';\r\nimport {ParentTaskContext} from '../Context/ParentTask-context';\r\n\r\nconst AddTaskDialog = (props)  => {\r\n\r\n    const [input, setInput] = useState('');\r\n    const addTask = useContext(ParentTaskContext).addTask;\r\n    const AddTodoCollection = (e) => {\r\n        e.preventDefault();\r\n        addTask(input);\r\n        props.setDialog(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <InputField placeholder=\"Create New Task Folder\" setInput={setInput} input={input} /> \r\n            <Button clicked={AddTodoCollection} disabled={!input} text=\"Create\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTaskDialog\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport AddTaskDialog from './AddTaskDialog';\r\n\r\n\r\n//add a new task and save it in the db\r\nconst AddParentTaskModal = (props) => {\r\n    const [open, setDialog] = useState(true);\r\n    \r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={e => {setDialog(false); props.close(false)} }>\r\n                <DialogContent dividers>\r\n                   <AddTaskDialog setDialog={e => setDialog(false)}/>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddParentTaskModal;","import React, { useState } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport styled from 'styled-components';\r\nimport {  Toolbar, Fab } from '@material-ui/core';\r\nimport AddParentTaskModal from './AddParentTaskModal';\r\nimport { device } from '../mediaQueries/device';\r\n\r\nconst styles = {\r\n    fabButton: {\r\n        zIndex: '1 !important',\r\n        top: '-10 !important',\r\n        margin: 'auto !important',\r\n    },\r\n    appBar: {\r\n        width: '92% !important',\r\n        backgroundColor: '#0d256fba',\r\n        margin: 'auto !important',\r\n        [device.mobileS]: {\r\n            width: '99% !important',\r\n        },\r\n        [device.tablet]: {\r\n            width: '95% !important',\r\n        },\r\n        [device.laptop]: {\r\n            width: '93% !important',\r\n       },\r\n       [device.laptopL]: {\r\n             width: '92% !important',\r\n        },\r\n        [device.desktop]: {\r\n            width: '91% !important',\r\n         }\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst FabButton = styled(Fab)(styles.fabButton);\r\nconst AppBarStyle = styled('div')(styles.appBar);\r\n\r\n//open <AddParentTaskModal />\r\nconst AddParentTask = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <AppBarStyle color=\"primary\" >\r\n            <Toolbar >\r\n                {open ? <AddParentTaskModal close={() => setOpen(false)} /> : null}\r\n                <FabButton color=\"secondary\" >\r\n                    <AddIcon onClick={() => { setOpen(true) }} />\r\n                </FabButton>\r\n            </Toolbar>\r\n        </AppBarStyle>\r\n    )\r\n}\r\n\r\nexport default AddParentTask\r\n","import React, { useState, useContext} from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport InputField from '../UI/InputField';\r\nimport Button from '../UI/Button';\r\nimport {ParentTaskContext} from '../Context/ParentTask-context'\r\n\r\n//Edi Parent task and save it in the db\r\nconst EditParentTaskModal = (props) => {\r\n    const [open, setDialog] = useState(true);\r\n    const [input, setInput] = useState(props.taskName);\r\n\r\n    const editParentTask = useContext(ParentTaskContext).editTask;\r\n\r\n    const EditTask = (e) => {\r\n        e.preventDefault();\r\n        editParentTask(props.id, input)\r\n        setDialog(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={e => {setDialog(false); props.close(false)} }>\r\n                <DialogContent dividers>\r\n                   <InputField placeholder=\"Update Task\" setInput={setInput} input={input} /> \r\n                   <Button clicked={EditTask} disabled={!input} text=\"Update\" />\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditParentTaskModal;","import React, {useState} from 'react'\r\nimport { Dialog } from '@material-ui/core';\r\nconst Modal = (props) => {\r\n    const [open, setDialog] = useState(true);\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={e => {setDialog(false); props.close(false)} }>\r\n                {props.children}\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext} from 'react';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\nimport Button from '../UI/Button';\r\nimport styled from 'styled-components';\r\nimport Modal from '../UI/Modal';\r\n\r\n\r\nconst styles = {\r\n    dialogContent : {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding : '10px'\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        justifyContent:'space-around'\r\n    }\r\n}\r\n\r\nconst Content =  styled('div')(styles.dialogContent);\r\nconst ButtonStyled =  styled('div')(styles.button);\r\n\r\nconst CompleteTaskModal = (props) => {\r\n    const updateTaskCompleted = useContext(ParentTaskContext).updateCompleted;\r\n\r\n    const checkTask = (e) => {\r\n        e.preventDefault();\r\n        updateTaskCompleted(props.id)\r\n        props.close(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal close={props.close}>\r\n                <Content>\r\n                   <h4>Are You sure you want to set the Task as Completed?</h4>\r\n                   <ButtonStyled>\r\n                        <Button clicked={checkTask}  text=\"Yes\" />\r\n                        <Button clicked={()=>{props.close(false)}}  text=\"No\" />\r\n                   </ButtonStyled>\r\n                </Content>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompleteTaskModal\r\n","import React, { useContext} from 'react'\r\nimport Modal from '../UI/Modal';\r\nimport styled from 'styled-components';\r\nimport Button from '../UI/Button';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\n\r\nconst styles = {\r\n    dialogContent : {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding : '10px'\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        justifyContent:'space-around'\r\n    }\r\n}\r\n\r\nconst Content =  styled('div')(styles.dialogContent);\r\nconst ButtonStyled =  styled('div')(styles.button);\r\n\r\nconst UncheckTaskModal = (props) => {\r\n    const uncheckTask = useContext(ParentTaskContext).uncheckTask;\r\n    const uncheckTaskHandler = (e) => {\r\n        e.preventDefault();\r\n        uncheckTask(props.id)\r\n        props.close(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal close={props.close}>\r\n                <Content>\r\n                   <h4>All the todos will be unchecked. Are You sure you want to uncheck the task ?</h4>\r\n                   <ButtonStyled>\r\n                        <Button clicked={uncheckTaskHandler}  text=\"Yes\" />\r\n                        <Button clicked={()=>{props.close(false)}}  text=\"No\" />\r\n                   </ButtonStyled>\r\n                </Content>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UncheckTaskModal\r\n","import React from 'react'\r\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EditParentTaskModal from \"./EditParentTaskModal\";\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\nimport CompleteTaskModal from './CompleteTaskModal';\r\nimport UncheckTaskModal from './UncheckTaskModal';\r\n\r\n\r\nconst ActionParentTaskModal = ({id, taskName, completed}) => {\r\n    \r\n    const deleteParentTask = React.useContext(ParentTaskContext).deleteTask;\r\n    \r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [Editmodal, setEditmodal] = React.useState(false)\r\n    const [Completedmodal, setCompletedmodal] = React.useState(false)\r\n    const [Uncheckmodal, setUncheckmodal] = React.useState(false)\r\n    const open = Boolean(anchorEl);\r\n    \r\n    const options = [\r\n        'Edit Task',\r\n        'Delete',\r\n        completed ? 'Mark as Uncheck': 'Mark as Completed'\r\n    \r\n    ];\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        switch (e.target.textContent) {\r\n            case 'Delete': deleteParentTask(id);\r\n                break;\r\n            case 'Edit Task': setEditmodal(true);\r\n                break;\r\n            case 'Mark as Completed': setCompletedmodal(true) ;\r\n                break;\r\n            case 'Mark as Uncheck': setUncheckmodal(true);\r\n                break;\r\n            default: console.log('Not in the list')\r\n        }\r\n        setAnchorEl(null);\r\n    };\r\n    const ITEM_HEIGHT = 48;\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4,\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {Editmodal ? <EditParentTaskModal id={id} taskName={taskName} close={() => setEditmodal(false)} /> : null}\r\n                {Completedmodal ? <CompleteTaskModal id={id} taskName={taskName} close={() => setCompletedmodal(false)} /> : null}\r\n                {Uncheckmodal ? <UncheckTaskModal id={id} taskName={taskName} close={() => setUncheckmodal(false)} /> : null}\r\n                {options.map((option) => (\r\n                    <MenuItem key={option} selected={option === 'Edit Task'} dense={false} onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionParentTaskModal\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport ActionParentTaskModal from '../EditParentTask/ActionParentTaskModal';\r\nimport styled from 'styled-components';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context'\r\n\r\nconst styles = {\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'contain'\r\n  },\r\n  listTextStyle: {\r\n    color: '#796969 !important',\r\n    textDecoration: 'line-through !important'\r\n  }\r\n}\r\n\r\n\r\nconst ListLinkStyle = styled(Link)(styles.link);\r\nconst ListTextStyle = styled(ListItemText)(styles.listTextStyle);\r\n\r\nconst ParentTaskListItem = ({ _id, taskName, updatedAt, completed }) => {\r\n  const getId = useContext(ParentTaskContext).getParentTaskId;\r\n  const fetchId = (id) => {\r\n    getId(id)\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n        <ListItem button>\r\n          <ListLinkStyle to=\"/dashboard\">\r\n            {completed ?\r\n              <ListTextStyle\r\n                primary={taskName} secondary={updatedAt} onClick={() => fetchId(_id)}\r\n              /> :\r\n              <ListItemText\r\n                primary={taskName} secondary={updatedAt} onClick={() => fetchId(_id)}\r\n              />\r\n            }\r\n          </ListLinkStyle>\r\n          <ActionParentTaskModal id={_id} taskName={taskName} completed ={completed} />\r\n        </ListItem>\r\n      \r\n  )\r\n}\r\n\r\nexport default ParentTaskListItem\r\n","\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport ParentTaskListItem from './ParentTaskListItem';\r\nimport { ParentTaskContext } from '../Context/ParentTask-context';\r\n\r\n\r\n//display list of all the parent tasks\r\n//props passed from <HomePage />\r\n//props passed to <EditParentTaskModal />\r\nconst ParentTaskList = (props) => {\r\n  const parentTaskList = useContext(ParentTaskContext).parentTasks;\r\n  const setParentTask = useContext(ParentTaskContext).setTask;\r\n  const [isloading, setIsloading] = useState(false)\r\n  //fetching parentTasks from db\r\n  useEffect(() => {\r\n    setParentTask();\r\n    setIsloading(true);\r\n  }, [isloading])\r\n  return (\r\n    <div>\r\n      { isloading && parentTaskList.map(({ _id, taskName, updatedAt, completed }) => (\r\n        \r\n        <React.Fragment key={_id}>\r\n          <ParentTaskListItem _id={_id} taskName={taskName} updatedAt={updatedAt} completed={completed} />\r\n        </React.Fragment>\r\n      )) \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ParentTaskList\r\n\r\n\r\n","import React  from 'react';\r\nimport {  Paper, List} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport AddParentTask from './AddParentTask';\r\nimport ParentTaskList from './ParentTaskList'\r\nimport { device } from '../mediaQueries/device';\r\n\r\n\r\nconst styles = {\r\n    home: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        paddingBottom: '100px',\r\n        padding: '20px 20px 20px 20px',\r\n        width: \"89%\",\r\n        margin: \"auto\",\r\n        height:'400px',\r\n        overflowY: \"scroll\",\r\n        [device.mobileS]: {\r\n            height: \"300px\",\r\n        },\r\n        \r\n        [device.laptop]: {\r\n            height: \"400px\",\r\n       },\r\n       [device.laptopL]: {\r\n        height: \"500px\",\r\n        },\r\n        [device.desktop]: {\r\n            height: \"1200px\",\r\n         }\r\n    }\r\n}\r\n\r\n\r\nconst PaperStyle = styled(Paper)(styles.paper);\r\nconst Homepage = styled('div')(styles.home);\r\n\r\n//below component is to fetch and Display the Parent tasks\r\n//props are passed to <AddParentTask /> component and <ParentTaskList />\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <Homepage>\r\n                <PaperStyle square >\r\n                    <List>\r\n                        <ParentTaskList  />\r\n                        </List>\r\n                </PaperStyle>\r\n                <AddParentTask />\r\n        </Homepage>  \r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './Dashboard/Header';\nimport TodoDashBoard from './Dashboard/TodoDashBoard';\nimport { Route,  Redirect, Switch } from \"react-router-dom\";\nimport HomePage from './HomePage/Homepage';\n\n\nconst styles = {\n  appDivStyle: {\n    backgroundColor: '#d4ccff',\n    width:'100%',\n    margin: '0',\n    padding: '0',\n    height:'100%',\n    position:'fixed',\n    justifyContent : 'center'\n  }\n}\n\nconst AppDivStyle = styled(\"div\")(styles.appDivStyle);\n\nlet routes = (\n  <Switch>\n    <Route path=\"/home\" component={HomePage} />\n    <Route path=\"/dashboard\" component={TodoDashBoard} /> \n    <Route path=\"/\" exact component={HomePage} />\n    <Redirect to ='/' />\n  </Switch>\n)\n\n\nfunction App() {\n  return (\n    <AppDivStyle>\n      <Header />\n      {routes}\n    </AppDivStyle>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport ParentTaskProvider from './Context/ParentTask-context';\nimport TodoListProvider from './Context/TodoList-context';\n\nconst app = (\n  <ParentTaskProvider>\n    <TodoListProvider>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </TodoListProvider>\n  </ParentTaskProvider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}